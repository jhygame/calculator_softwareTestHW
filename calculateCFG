digraph cluster0example {
	graph [compound=True fontname="DejaVu Sans Mono" label=example pack=False rankdir=TB ranksep=0.02]
	node [fontname="DejaVu Sans Mono"]
	edge [fontname="DejaVu Sans Mono"]
	1 [label="BASE_NUM = '0123456789'\lOPERATOR = '+-*/%^'\lBRACKETS = '()'\lOPERATOR_PRIORITY = {'+': 1, '-': 1, '*': 2, '/': 2, '%': 2, '^': 3}\lOPERATOR_NUMBERS = {'+': 2, '-': 2, '*': 2, '/': 2, '%': 2, '^': 2}\lOPERATOR_CALCULATE = {'+': lambda x, y: x + y...'-': lambda x, y: x - y...'*':\l    lambda x, y: x * y, '/': lambda x, y: x / y...'%': lambda x, y: x % y,\l    '^': lambda x, y: x ** y}\ldef calculate_string(string):...\ldef string_to_signals(string):...\ldef is_base_num(char):...\ldef is_num(signal):...\ldef is_operator(signal):...\ldef is_brackets(signal):...\ldef operator_compare(signal1, signal2):...\ldef infix_to_suffix(signals):...\ldef suffix_calculate(suffixs):...\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
	subgraph cluster0calculate_string {
		graph [compound=True fontname="DejaVu Sans Mono" label=calculate_string pack=False rankdir=TB ranksep=0.02]
		node [fontname="DejaVu Sans Mono"]
		edge [fontname="DejaVu Sans Mono"]
		3 [label="signals = string_to_signals(string)\lsuffixs = infix_to_suffix(signals)\lnum = suffix_calculate(suffixs)\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		3 -> 4 [label=calls style=dashed]
		3 -> 5 [label=calls style=dashed]
		3 -> 6 [label=calls style=dashed]
		subgraph cluster_3 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			4 [label=string_to_signals color="#E552FF" shape=tab style=filled]
			5 [label=infix_to_suffix color="#E552FF" shape=tab style=filled]
			6 [label=suffix_calculate color="#E552FF" shape=tab style=filled]
		}
		7 [label="return num\l" fillcolor="#98fb98" shape=parallelogram style="filled,solid"]
		3 -> 7 [label="" color=black]
	}
	subgraph cluster0string_to_signals {
		graph [compound=True fontname="DejaVu Sans Mono" label=string_to_signals pack=False rankdir=TB ranksep=0.02]
		node [fontname="DejaVu Sans Mono"]
		edge [fontname="DejaVu Sans Mono"]
		11 [label="signals = []\lstart = -1\lend = 0\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		12 [label="for end in range(len(string)):\l" fillcolor="#FFBE52" shape=hexagon style="filled,solid"]
		12 -> 13 [label=calls style=dashed]
		subgraph cluster_12 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			13 [label=range color="#E552FF" shape=tab style=filled]
			14 [label=len color="#E552FF" shape=tab style=filled]
			13 -> 14 [color=black]
		}
		15 [label="if not is_base_num(string[end]):\l" fillcolor="#FF6752" shape=diamond style="filled,solid"]
		17 [label="signals.append(string[end])\lstart = -1\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		17 -> 26 [label=calls style=dashed]
		subgraph cluster_17 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			26 [label="signals.append" color="#E552FF" shape=tab style=filled]
		}
		17 -> 12 [label="" color=black]
		15 -> 17 [label="not is_base_num(string[end])" color=green]
		19 [label="if start == -1:\l" fillcolor="#FF6752" shape=diamond style="filled,solid"]
		20 [label="start = end\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		21 [label="if end == len(string) - 1 or not is_base_num(string[end + 1]):\l" fillcolor="#FF6752" shape=diamond style="filled,solid"]
		22 [label="signals.append(int(string[start:end + 1]))\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		22 -> 24 [label=calls style=dashed]
		subgraph cluster_22 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			24 [label="signals.append" color="#E552FF" shape=tab style=filled]
			25 [label=int color="#E552FF" shape=tab style=filled]
			24 -> 25 [color=black]
		}
		22 -> 12 [label="" color=black]
		21 -> 22 [label="end == len(string) - 1 or not is_base_num(string[end + 1])" color=green]
		21 -> 12 [label="(not (end == len(string) - 1 or not is_base_num(string[end + 1])))" color=red]
		20 -> 21 [label="" color=black]
		19 -> 20 [label="start == -1" color=green]
		19 -> 21 [label="(start != -1)" color=red]
		15 -> 19 [label="(not not is_base_num(string[end]))" color=red]
		12 -> 15 [label="range(len(string))" color=green]
		16 [label="return signals\l" fillcolor="#98fb98" shape=parallelogram style="filled,solid"]
		12 -> 16 [label="" color=green]
		11 -> 12 [label="" color=black]
	}
	subgraph cluster0is_base_num {
		graph [compound=True fontname="DejaVu Sans Mono" label=is_base_num pack=False rankdir=TB ranksep=0.02]
		node [fontname="DejaVu Sans Mono"]
		edge [fontname="DejaVu Sans Mono"]
		30 [label="return char in BASE_NUM\l" fillcolor="#98fb98" shape=parallelogram style="filled,solid"]
	}
	subgraph cluster0is_num {
		graph [compound=True fontname="DejaVu Sans Mono" label=is_num pack=False rankdir=TB ranksep=0.02]
		node [fontname="DejaVu Sans Mono"]
		edge [fontname="DejaVu Sans Mono"]
		34 [label="return isinstance(signal, int)\l" fillcolor="#98fb98" shape=parallelogram style="filled,solid"]
	}
	subgraph cluster0is_operator {
		graph [compound=True fontname="DejaVu Sans Mono" label=is_operator pack=False rankdir=TB ranksep=0.02]
		node [fontname="DejaVu Sans Mono"]
		edge [fontname="DejaVu Sans Mono"]
		38 [label="return signal in OPERATOR\l" fillcolor="#98fb98" shape=parallelogram style="filled,solid"]
	}
	subgraph cluster0is_brackets {
		graph [compound=True fontname="DejaVu Sans Mono" label=is_brackets pack=False rankdir=TB ranksep=0.02]
		node [fontname="DejaVu Sans Mono"]
		edge [fontname="DejaVu Sans Mono"]
		42 [label="return signal in BRACKETS\l" fillcolor="#98fb98" shape=parallelogram style="filled,solid"]
	}
	subgraph cluster0operator_compare {
		graph [compound=True fontname="DejaVu Sans Mono" label=operator_compare pack=False rankdir=TB ranksep=0.02]
		node [fontname="DejaVu Sans Mono"]
		edge [fontname="DejaVu Sans Mono"]
		46 [label="res = OPERATOR_PRIORITY[signal1] - OPERATOR_PRIORITY[signal2]\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		47 [label="if res > 0:\l" fillcolor="#FF6752" shape=diamond style="filled,solid"]
		48 [label="return 1\l" fillcolor="#98fb98" shape=parallelogram style="filled,solid"]
		47 -> 48 [label="res > 0" color=green]
		49 [label="if res < 0:\l" fillcolor="#FF6752" shape=diamond style="filled,solid"]
		51 [label="return -1\l" fillcolor="#98fb98" shape=parallelogram style="filled,solid"]
		49 -> 51 [label="res < 0" color=green]
		52 [label="return 0\l" fillcolor="#98fb98" shape=parallelogram style="filled,solid"]
		49 -> 52 [label="(res >= 0)" color=red]
		47 -> 49 [label="(res <= 0)" color=red]
		46 -> 47 [label="" color=black]
	}
	subgraph cluster0infix_to_suffix {
		graph [compound=True fontname="DejaVu Sans Mono" label=infix_to_suffix pack=False rankdir=TB ranksep=0.02]
		node [fontname="DejaVu Sans Mono"]
		edge [fontname="DejaVu Sans Mono"]
		57 [label="stack = []\lsuffixs = []\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		58 [label="for signal in signals:\l" fillcolor="#FFBE52" shape=hexagon style="filled,solid"]
		59 [label="if is_num(signal):\l" fillcolor="#FF6752" shape=diamond style="filled,solid"]
		59 -> 61 [label=calls style=dashed]
		subgraph cluster_59 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			61 [label=is_num color="#E552FF" shape=tab style=filled]
		}
		62 [label="suffixs.append(signal)\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		62 -> 98 [label=calls style=dashed]
		subgraph cluster_62 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			98 [label="suffixs.append" color="#E552FF" shape=tab style=filled]
		}
		62 -> 58 [label="" color=black]
		59 -> 62 [label="is_num(signal)" color=green]
		64 [label="if is_operator(signal):\l" fillcolor="#FF6752" shape=diamond style="filled,solid"]
		64 -> 65 [label=calls style=dashed]
		subgraph cluster_64 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			65 [label=is_operator color="#E552FF" shape=tab style=filled]
		}
		66 [label="while True:\l" fillcolor="#FFBE52" shape=hexagon style="filled,solid"]
		89 [label="if len(stack) == 0 or is_brackets(stack[-1]) or operator_compare(signal,\l" fillcolor="#FF6752" shape=diamond style="filled,solid"]
		91 [label="stack.append(signal)\lbreak\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		91 -> 96 [label=calls style=dashed]
		subgraph cluster_91 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			96 [label="stack.append" color="#E552FF" shape=tab style=filled]
		}
		91 -> 58 [label="" color=black]
		89 -> 91 [label="len(stack) == 0 or is_brackets(stack[-1]) or operator_compare(signal, stack[-1]
    ) == 1" color=red]
		93 [label="suffixs.append(stack.pop())\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		93 -> 94 [label=calls style=dashed]
		subgraph cluster_93 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			94 [label="suffixs.append" color="#E552FF" shape=tab style=filled]
			95 [label="stack.pop" color="#E552FF" shape=tab style=filled]
			94 -> 95 [color=black]
		}
		93 -> 66 [label="" color=black]
		89 -> 93 [label="(not (len(stack) == 0 or is_brackets(stack[-1]) or operator_compare(signal,
    stack[-1]) == 1))" color=red]
		66 -> 89 [label=True color=green]
		66 -> 58 [label="(False)" color=red]
		64 -> 66 [label="is_operator(signal)" color=green]
		68 [label="if is_brackets(signal):\l" fillcolor="#FF6752" shape=diamond style="filled,solid"]
		68 -> 69 [label=calls style=dashed]
		subgraph cluster_68 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			69 [label=is_brackets color="#E552FF" shape=tab style=filled]
		}
		70 [label="if signal == '(':\l" fillcolor="#FF6752" shape=diamond style="filled,solid"]
		74 [label="stack.append('(')\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		74 -> 88 [label=calls style=dashed]
		subgraph cluster_74 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			88 [label="stack.append" color="#E552FF" shape=tab style=filled]
		}
		74 -> 58 [label="" color=black]
		70 -> 74 [label="signal == '('" color=green]
		76 [label="while True:\l" fillcolor="#FFBE52" shape=hexagon style="filled,solid"]
		77 [label="assert len(stack) > 0\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		80 [label="if stack[-1] == '(':\l" fillcolor="#FF6752" shape=diamond style="filled,solid"]
		80 -> 81 [label=calls style=dashed]
		subgraph cluster_80 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			81 [label=len color="#E552FF" shape=tab style=filled]
		}
		82 [label="stack.pop()\lbreak\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		82 -> 84 [label=calls style=dashed]
		subgraph cluster_82 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			84 [label="stack.pop" color="#E552FF" shape=tab style=filled]
		}
		82 -> 58 [label="" color=black]
		80 -> 82 [label="stack[-1] == '('" color=green]
		83 [label="suffixs.append(stack.pop())\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		83 -> 86 [label=calls style=dashed]
		subgraph cluster_83 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			86 [label="suffixs.append" color="#E552FF" shape=tab style=filled]
			87 [label="stack.pop" color="#E552FF" shape=tab style=filled]
			86 -> 87 [color=black]
		}
		83 -> 76 [label="" color=black]
		80 -> 83 [label="(stack[-1] != '(')" color=red]
		77 -> 80 [label="len(stack) > 0" color=black]
		76 -> 77 [label=True color=green]
		76 -> 58 [label="(False)" color=red]
		70 -> 76 [label="(signal != '(')" color=red]
		68 -> 70 [label="is_brackets(signal)" color=green]
		72 [label="raise Exception('the signal is illega...')\l" fillcolor="#98fb98" shape=house style="filled,solid"]
		68 -> 72 [label="(not is_brackets(signal))" color=red]
		64 -> 68 [label="(not is_operator(signal))" color=red]
		59 -> 64 [label="(not is_num(signal))" color=red]
		58 -> 59 [label=signals color=green]
		60 [label="suffixs += stack[::-1]\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		99 [label="return suffixs\l" fillcolor="#98fb98" shape=parallelogram style="filled,solid"]
		60 -> 99 [label="" color=black]
		58 -> 60 [label="" color=green]
		57 -> 58 [label="" color=black]
	}
	subgraph cluster0suffix_calculate {
		graph [compound=True fontname="DejaVu Sans Mono" label=suffix_calculate pack=False rankdir=TB ranksep=0.02]
		node [fontname="DejaVu Sans Mono"]
		edge [fontname="DejaVu Sans Mono"]
		103 [label="stack = []\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		104 [label="for suffix in suffixs:\l" fillcolor="#FFBE52" shape=hexagon style="filled,solid"]
		105 [label="if is_num(suffix):\l" fillcolor="#FF6752" shape=diamond style="filled,solid"]
		105 -> 107 [label=calls style=dashed]
		subgraph cluster_105 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			107 [label=is_num color="#E552FF" shape=tab style=filled]
		}
		108 [label="stack.append(suffix)\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		108 -> 123 [label=calls style=dashed]
		subgraph cluster_108 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			123 [label="stack.append" color="#E552FF" shape=tab style=filled]
		}
		108 -> 104 [label="" color=black]
		105 -> 108 [label="is_num(suffix)" color=green]
		110 [label="if is_operator(suffix):\l" fillcolor="#FF6752" shape=diamond style="filled,solid"]
		110 -> 111 [label=calls style=dashed]
		subgraph cluster_110 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			111 [label=is_operator color="#E552FF" shape=tab style=filled]
		}
		112 [label="operator_nums = OPERATOR_NUMBERS[suffix]\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		116 [label="if len(stack) < operator_nums:\l" fillcolor="#FF6752" shape=diamond style="filled,solid"]
		116 -> 117 [label=calls style=dashed]
		subgraph cluster_116 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			117 [label=len color="#E552FF" shape=tab style=filled]
		}
		118 [label="raise Exception('input numbers illega...')\l" fillcolor="#98fb98" shape=house style="filled,solid"]
		116 -> 118 [label="len(stack) < operator_nums" color=green]
		119 [label="num = OPERATOR_CALCULATE[suffix](*stack[-operator_nums:])\lstack = stack[:-operator_nums]\lstack.append(num)\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		119 -> 121 [label=calls style=dashed]
		119 -> 122 [label=calls style=dashed]
		subgraph cluster_119 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			121 [label=OPERATOR_CALCULATE color="#E552FF" shape=tab style=filled]
			122 [label="stack.append" color="#E552FF" shape=tab style=filled]
		}
		119 -> 104 [label="" color=black]
		116 -> 119 [label="(len(stack) >= operator_nums)" color=red]
		112 -> 116 [label="" color=black]
		110 -> 112 [label="is_operator(suffix)" color=green]
		114 [label="raise Exception('the suffix is illega...')\l" fillcolor="#98fb98" shape=house style="filled,solid"]
		110 -> 114 [label="(not is_operator(suffix))" color=red]
		105 -> 110 [label="(not is_num(suffix))" color=red]
		104 -> 105 [label=suffixs color=green]
		106 [label="assert len(stack) == 1\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		125 [label="print('suffixs: ', suffixs, '\nresult: ', stack[0])\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
		125 -> 126 [label=calls style=dashed]
		125 -> 127 [label=calls style=dashed]
		subgraph cluster_125 {
			graph [color=purple compound=true fontname="DejaVu Sans Mono" label="" rankdir=TB ranksep=0.02 shape=tab style=filled]
			node [fontname="DejaVu Sans Mono"]
			edge [fontname="DejaVu Sans Mono"]
			126 [label=len color="#E552FF" shape=tab style=filled]
			127 [label=print color="#E552FF" shape=tab style=filled]
		}
		128 [label="return stack[0]\l" fillcolor="#98fb98" shape=parallelogram style="filled,solid"]
		125 -> 128 [label="" color=black]
		106 -> 125 [label="len(stack) == 1" color=black]
		104 -> 106 [label="" color=green]
		103 -> 104 [label="" color=black]
	}
	subgraph cluster_KEY {
		graph [fontname="DejaVu Sans Mono" label=KEY]
		node [fontname="DejaVu Sans Mono"]
		edge [fontname="DejaVu Sans Mono"]
		input [fillcolor="#afeeee" shape=parallelogram style=filled]
		default [fillcolor="#FFFB81" shape=rectangle style=filled]
		if [fillcolor="#FF6752" shape=diamond style=filled]
		for [fillcolor="#FFBE52" shape=hexagon style=filled]
		while [fillcolor="#FFBE52" shape=hexagon style=filled]
		call [fillcolor="#E552FF" shape=tab style=filled]
		return [fillcolor="#98fb98" shape=parallelogram style=filled]
		try [fillcolor=orange shape=Mdiamond style=filled]
		raise [fillcolor="#98fb98" shape=house style=filled]
		if -> input [style=invis]
		input -> call [style=invis]
		for -> return [style=invis]
		return -> default [style=invis]
		try -> raise [style=invis]
	}
}
